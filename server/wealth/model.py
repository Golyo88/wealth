# generated by datamodel-codegen:
#   filename:  weath.schema.json
#   timestamp: 2025-03-09T19:48:21+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel


class Role(Enum):
    országgyűlési_képviselő = "országgyűlési képviselő"
    házas__élettárs = "házas-/élettárs"
    gyermek = "gyermek"


class Person(BaseModel):
    name: str
    role: Role

    class Config:
        from_attributes = True


class RealEstateItem(BaseModel):
    location: str
    area_m2: int
    land_use: str
    building_type: Optional[str] = None
    building_size_m2: Optional[int] = None
    legal_status: Optional[str] = None
    ownership_status: str
    ownership_share: str
    acquisition_mode: str
    acquisition_date: str

    class Config:
        from_attributes = True


class Vehicle(BaseModel):
    type: str
    brand_model: str
    acquisition_year: int
    acquisition_mode: str

    class Config:
        from_attributes = True


class Security(BaseModel):
    type: str
    value_huf: int

    class Config:
        from_attributes = True


class Savings(BaseModel):
    deposit_huf: Optional[int] = None
    cash_huf: Optional[int] = None
    bank_balance_huf: Optional[int] = None
    bank_balance_foreign_currency: Optional[int] = None
    exchange_rate: Optional[float] = None

    class Config:
        from_attributes = True


class Assets(BaseModel):
    real_estate: Optional[List[RealEstateItem]] = None
    vehicles: Optional[List[Vehicle]] = None
    securities: Optional[List[Security]] = None
    savings: Optional[Savings] = None

    class Config:
        from_attributes = True


class Liabilities(BaseModel):
    public_debt_huf: Optional[int] = None
    bank_loans_huf: Optional[int] = None
    private_loans_huf: Optional[int] = None

    class Config:
        from_attributes = True


class IncomeCategory(Enum):
    díjazás_nélküli = "díjazás nélküli"
    field_1 = "1"
    field_2 = "2"
    field_3 = "3"
    field_4 = "4"
    field_5 = "5"


class IncomeItem(BaseModel):
    position: str
    income_category: IncomeCategory

    class Config:
        from_attributes = True


class EconomicInterest(BaseModel):
    organization: str
    role: str
    ownership_percentage: Optional[str] = None
    income_category: IncomeCategory

    class Config:
        from_attributes = True


class Wealth(BaseModel):
    person: Person
    assets: Assets
    liabilities: Liabilities
    income: List[IncomeItem]
    economic_interests: List[EconomicInterest]

    class Config:
        use_enum_values = True
        from_attributes = True


class WealthModelWithId(Wealth):
    id: int

    class Config:
        from_attributes = True
